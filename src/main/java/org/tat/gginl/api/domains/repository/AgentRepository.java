package org.tat.gginl.api.domains.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.tat.gginl.api.domains.Agent;

public interface AgentRepository extends JpaRepository<Agent, String>{
	String query = "SELECT Rtrim(ID) as ID,Rtrim(INITIALID) as INITIALID,Rtrim(FIRSTNAME) as FIRSTNAME,Rtrim(MIDDLENAME) as MIDDLENAME,Rtrim(LASTNAME) as LASTNAME,Rtrim(IDNO) as IDNO,Rtrim(IDTYPE) as IDTYPE,Rtrim(DATEOFBIRTH) as DATEOFBIRTH,Rtrim(CODENO) as CODENO,Rtrim(LISCENSENO) as LISCENSENO,Rtrim(BRANCHID) as BRANCHID,Rtrim(ADDRESS) as ADDRESS,Rtrim(TOWNSHIPID) as TOWNSHIPID,Rtrim(VoicePhoneNo) as VoicePhoneNo,Rtrim(FAX) as FAX,Rtrim(EMAIL) as EMAIL,Rtrim(SMSPhoneNo) as SMSPhoneNo,Rtrim(CREATEDUSERID) as CREATEDUSERID,Rtrim(CREATEDDATE) as CREATEDDATE,Rtrim(UPDATEDUSERID) as UPDATEDUSERID,Rtrim(UPDATEDDATE) as UPDATEDDATE,Rtrim(VERSION) as VERSION,Rtrim(FATHERNAME) as FATHERNAME,Rtrim(GENDER) as GENDER,Rtrim(BIRTHMARK) as BIRTHMARK,Rtrim(MARITALSTATUS) as MARITALSTATUS,Rtrim(NATIONALITYID) as NATIONALITYID,Rtrim(RELIGIONID) as RELIGIONID,Rtrim(QUALIFICATIONID) as QUALIFICATIONID,Rtrim(BANKBRANCHID) as BANKBRANCHID,Rtrim(ACCOUNTNO) as ACCOUNTNO,Rtrim(RESIDENTADDRESS) as RESIDENTADDRESS,Rtrim(RESIDENTTOWNSHIPID) as RESIDENTTOWNSHIPID,Rtrim(PERMANENTADDRESS) as PERMANENTADDRESS,Rtrim(PERMANENTTOWNSHIPID) as PERMANENTTOWNSHIPID,Rtrim(REMARK) as REMARK,Rtrim(APPOINTEDDATE) as APPOINTEDDATE,Rtrim(TRAINING) as TRAINING,Rtrim(OUTSTANDINGEVENT) as OUTSTANDINGEVENT,Rtrim(GROUPTYPE) as GROUPTYPE,Rtrim(ORGANIZATIONID) as ORGANIZATIONID,Rtrim(STATECODEID) as STATECODEID,Rtrim(TOWNSHIPCODEID) as TOWNSHIPCODEID,Rtrim(IDCONDITIONTYPE) as IDCONDITIONTYPE,Rtrim(MAPKEY) as MAPKEY,Rtrim(CLNKEY) as CLNKEY ,Rtrim(SALEPOINTID) as SALEPOINTID,Rtrim(ViberPhoneNo) as ViberPhoneNo,'1' as STATUS " + 
			"  FROM AGENT";
	@Query(value =query,nativeQuery = true)
	List<Object[]> findAllNativeObject();
	
	@Query(value = "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AGENT'",nativeQuery = true)
	List<Object> findAllColumnName();
}
